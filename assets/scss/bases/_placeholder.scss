// Grace à l'heritage, les mixins nous permet de ne pas repeter les block de code meme lors de la compilation



%wFull {
    width: 100%;
}

%hFull {
    height: 100%;
}


// Pour un element qui prend 100% de son parent
%fullRation {
    @extend %wFull;
    @extend %hFull;
}

// Pour que la hauteur et la largeur aie la meme valeur
%sameAsWidth {
    aspect-ratio: 1/1;
}

%d-none {
    display: none;
}

%posAbsolute {
    position: absolute;
}

%posFixed {
    position: fixed;
}

%posRelative {
    position: relative;
}

%posFullFixed {
    @extend %posFixed;
    height: 100vh;
}

%posFullAbsolute {

    @extend %posAbsolute;
    @extend %fullRation;
}

// Placer un element en haut à gauche
%topLeft {

    top : 0;
    left: 0;
}

/** 
=== FLEX
*/
%flex {
    display: flex;
}

%flexCol {
    @extend %flex;
    flex-direction: column;
}

// Pour center un element en FLEX 
%flexMiddle {
    @extend %flex;
    justify-content: center;
    align-items    : center;
}

// Pour center HORIZONTALEMENT un element en FLEX ligne 
%flexRowXCenter {
    @extend %flex;
    justify-content: center;
}

// Pour center VERTICALEMENT un element en FLEX ligne 
%flexRowYCenter {

    @extend %flex;
    align-items: center;
}

// Pour center HORIZONTALEMENT un element en FLEX colonne 
%flexColXCenter {
    @extend %flexCol;
    align-items: center;
}

// Pour center VERTICALEMENT un element en FLEX colonne 
%flexColYCenter {
    @extend %flexCol;
    justify-content: center;
}

/** 
    === Component
*/

%btn {
    padding         : 10px 14px;
    border-radius   : 4px;
    border          : none;
    background-color: gray;

}

%card {
    color           : rgba(0, 0, 0, 0.75);
    background-color: $color-white;
    box-shadow      : 0 20px 30px rgba(0, 0, 0, 0.05), 0 15px 10px rgba(0, 0, 0, 0.03);
    border          : 1px solid rgba(0, 0, 0, 0.05);
    margin-bottom   : rem(15);
    min-width       : 150px;
    overflow        : hidden;
}